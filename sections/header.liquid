<style>
    .mega-menu__link--undergarments {
      background-color: {{ section.settings.undergarments_bg_color }};
    }
    @media screen and  (max-width: 1280px) {
      .header__icon-link-title {
        display: none;
      }
    }
    .header__search-form {
    position: relative;

    transition: all 0.3s ease, width 0.3s ease, max-width 0.3s ease;
  }

  .header__search-input {
    width: 100%;
    padding: 10px 12px;
    padding-left: 40px; /* make space for icon */
    border: 1px solid #ddd;
    border-radius: 6px;
    font-size: 14px;
    transition: all 0.3s ease;
  }

  .search-icon {
    position: absolute;
    left: 12px;
    top: 50%;
    transform: translateY(-50%);
    display: flex;
    align-items: center;
    pointer-events: none;
    transition: all 0.3s ease;
  }

  /* Focused search styles - expand from current width to 50% of header */
  .header--search-focused .header__search--desktop .header__search-form {
    max-width: none !important;
    width: 40vw !important; /* Use viewport width for more predictable sizing */
    z-index: 1000;
    transition: all 0.3s ease, width 0.3s ease, max-width 0.3s ease;
  }

  .header--search-focused .header__search-input {
    padding-right: 12px; /* Reset padding */
    width: 100%;
  }

  /* Close button positioned outside search box on the right */
  .search-close-btn {
    position: absolute;
    right: -70px;
    top: 50%;
    transform: translateY(-50%);
    background: none;
    border: 1px solid #ddd;
    border-radius: 50%;
    cursor: pointer;
    padding: 8px;
    display: none;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    z-index: 1001;
    margin-left: 24px;
  }

  .header--search-focused .search-close-btn {
    display: flex;
  }

  /* Don't center the header center container - keep original layout */
  .header--search-focused .header__center {
    flex: 1;
  }

  /* Hide elements when search is focused */
  .header--search-focused .header__left,
  .header--search-focused .header__right {
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease, visibility 0.3s ease;
  }

  .header--search-focused .header__center {
    flex: 1;
  }

  /* Mobile focused search - expand from current width to 50% */
  .header--search-focused .header__search--mobile .header__search-form {
    width: 70% !important; /* Slightly larger on mobile for better usability */
    max-width: none !important;
    /* Remove margin: 0 auto to keep original position */
    position: relative;
    transition: all 0.3s ease, width 0.3s ease;
  }

  .header--search-focused .header__search--mobile .header__search-input {
    padding-right: 15px; /* Reset padding */
    width: 100%;
  }

  .header--search-focused .header__search--mobile .search-close-btn {
    display: flex;
    position: absolute;
    right: -40px; /* Position outside search box */
    top: 50%;
    transform: translateY(-50%);
  }

  .header--search-focused .header__search--mobile .header__search-button {
    display: none;
  }

  /* Remove overlay - no background color change */
  .search-overlay {
    display: none;
  }
  .predictive-search-results{
    position: absolute;
    z-index: 2000;
    background: white;
    width: 100%;
  }
</style>

<header class="header header-{{ section.id }} pt-16 pb-16 sm:pl-0 sm:pr-0">
  <div class="search-overlay" onclick="closeSearchFocus()"></div>

  <div class="header__container pt-0 pr-6_1_1 pb-0 pl-6_1_1 sm:flex-col sm:gap-0 sm:pt-0 sm:pr-3_9_8 sm:pb-0 sm:pl-3_9_8">
    <div class="header__inner flex justify-between items-center gap-36 sm:pt-16 sm:pr-0 sm:pb-16 sm:pl-0">
      <div class="header__left header__item-container flex-1 justify-start sm:flex-1_0_0">
        <button
          id="menuIcon"
          class="header__menu-toggle hidden sm:block border-none cursor-pointer hidden sm:flex items-center justify-center transition-transform sm:bg-none sm:border-none sm:p-0"
          aria-label="Open menu"
          onclick="toggleMobileMenu()"
        >
          <div class="menu-icon">
            {% render 'menu-icon' %}
          </div>
          <div class="close-icon hidden">
            {% render 'icon-close', cls: 'svg-brand' %}
          </div>
        </button>
        {% render 'logo', padding_left: 138, padding_bottom: 40, logo_width: 138, logo_cls: 'block sm:hidden' %}
      </div>

      <div class="header__center header__item-container flex-1 text-left sm:flex-1_0_0 sm:text-center">
        <a href="{{ routes.root_url }}" class="header__logo-link--mobile hidden sm:block relative block media">
          {%- if settings.brand_logo != blank -%}
            {% render 'logo',
              cls: 'w-full h-auto',
              logo_cls: 'hidden sm:block',
              height: settings.logo_height,
              width: settings.logo_width
            %}
          {%- else -%}
            <span class="header__logo-name">{{ settings.logo_text }}</span>
          {%- endif -%}
        </a>
        <div class="header__search--desktop block sm:hidden relative mt-0 mb-0 ml-auto mr-auto">
          <predictive-search
            id="predictive-search"
            class="predictive-search"
          >
            <form action="{{ routes.search_url }}" method="get" class="header__search-form" role="search">
              <!-- Search Icon -->
              <span class="search-icon">
                {% render 'search-icon', height: 24, width: 24 %}
              </span>

              <!-- Input -->
              <input
                type="search"
                name="q"
                class="header__search-input ff-general-sans fs-14-lh-20-ls-0_1 fw-500"
                placeholder="{{ 'sections.header.search' | t }}"
                aria-label="Search"
                onfocus="openSearchFocus()"
              >

              <!-- Close Button -->
              <button
                type="button"
                class="search-close-btn"
                onclick="closeSearchFocus()"
                aria-label="Close search"
              >
                {% render 'icon-close', cls: 'svg-primary-optional', height: 20, width: 20 %}
              </button>
            </form>
          </predictive-search>
        </div>
      </div>

      <div class="header__right header__item-container flex justify-end items-center flex-1 gap-24 sm:flex-1_0_0 sm:gap-16 sm:flex-row-reverse sm:justify-start">
        <a
          href="{{ routes.account_url }}"
          class="header__icon-link flex items-center no-underline w-auto h-auto text-brand sm:justify-center sm:rounded-full sm:w-36 sm:h-36 gap-4"
        >
          {% render 'accounts-icon' %}
          <span class="header__icon-link-title block sm:hidden ff-general-sans fs-14-lh-100pct-ls-0 fw-600">
            {{- 'sections.header.account' | t -}}
          </span>
        </a>
        <a
          href="{{ routes.cart_url }}"
          class="header__icon-link flex items-center no-underline w-auto h-auto text-brand sm:justify-center sm:rounded-full sm:w-36 sm:h-36 gap-4"
        >
          {% render 'cart-icon' %}
          <span class="header__icon-link-title block sm:hidden ff-general-sans fs-14-lh-100pct-ls-0 fw-600">
            {{- 'sections.header.cart' | t -}}
          </span>
        </a>
        <div class="header__social-icons flex sm:hidden gap-10">
          <a
            href="#"
            class="header__icon-link flex items-center no-underline w-auto h-auto text-brand sm:justify-center sm:rounded-full sm:w-36 sm:h-36"
            aria-label="Chat on WhatsApp"
          >
            {%- render 'whatsapp-icon' -%}
          </a>
          <a
            href="#"
            class="header__icon-link flex items-center no-underline w-auto h-auto text-brand sm:justify-center sm:rounded-full sm:w-36 sm:h-36"
            aria-label="Chat on Messenger"
          >
            {%- render 'message-icon' -%}
          </a>
          <a
            href="#"
            class="header__icon-link flex items-center no-underline w-auto h-auto text-brand sm:justify-center sm:rounded-full sm:w-36 sm:h-36"
            aria-label="Call us"
          >
            {%- render 'phone-icon' -%}
          </a>
        </div>
      </div>
    </div>

    <div class="header__search--mobile hidden sm:block sm:relative">
      <form action="{{ routes.search_url }}" method="get" class="header__search-form" role="search">
        <input
          type="search"
          name="q"
          class="header__search-input border-1 border-solid border-color w-full h-40 rounded-6 pt-10 pr-15 pb-10 pl-45"
          placeholder="{{ 'sections.header.search' | t }}"
          aria-label="Search"
          onfocus="openSearchFocus()"
        >
        <button
          type="submit"
          class="header__search-button bg-none text-secondary-light absolute left-15 top-50pct translate-y--50 border-none p-0 cursor-pointer"
          aria-label="Submit search"
        >
          {% render 'search-icon' %}
        </button>

        <!-- Mobile Close Button - positioned outside -->
        <button
          type="button"
          class="search-close-btn bg-none text-secondary-light border-none p-0 cursor-pointer"
          onclick="closeSearchFocus()"
          aria-label="Close search"
        >
          {% render 'icon-close', cls: 'svg-brand', height: 20, width: 20 %}
        </button>
      </form>
    </div>

    <!-- Mobile Mega Menu -->
    {% render 'mobile-menu', section: section %}
  </div>
</header>
<div class="predictive-search-results"></div>

<!-- Desktop Mega Menu Navigation -->
{% render 'desktop-menu', section: section %}

<script>
  function openSearchFocus() {
    const header = document.querySelector('.header');
    header.classList.add('header--search-focused');
    document.body.classList.add('search-focused');
  }

  function closeSearchFocus() {
    const header = document.querySelector('.header');
    const searchInputs = document.querySelectorAll('.header__search-input');

    header.classList.remove('header--search-focused');
    document.body.classList.remove('search-focused');

    // Clear search inputs and blur them
    searchInputs.forEach((input) => {
      input.value = ''; // Clear the search box content
      input.blur();
    });
  }

  // Close search focus when pressing Escape
  document.addEventListener('keydown', function (event) {
    if (event.key === 'Escape') {
      closeSearchFocus();
    }
  });

  function toggleMobileMenu() {
    const mobileMenu = document.getElementById('mobileMegaMenu');
    const menuButton = document.getElementById('menuIcon');
    const menuIcon = menuButton.querySelector('.menu-icon');
    const closeIcon = menuButton.querySelector('.close-icon');

    mobileMenu.classList.toggle('active');
    menuButton.classList.toggle('active');

    // Swap menu/close icons with Tailwind utility classes
    if (mobileMenu.classList.contains('active')) {
      menuIcon.classList.add('hidden');
      menuIcon.classList.remove('block');

      closeIcon.classList.remove('hidden');
      closeIcon.classList.add('block');

      document.body.style.overflow = 'hidden';
    } else {
      menuIcon.classList.remove('hidden');
      menuIcon.classList.add('block');

      closeIcon.classList.add('hidden');
      closeIcon.classList.remove('block');

      document.body.style.overflow = '';

      // Collapse all categories when menu closes
      const collapsibleElements = document.querySelectorAll('collapsible-content');
      collapsibleElements.forEach((el) => el.collapse());
    }
  }

  // Close menu when clicking outside or on links
  document.addEventListener('click', function (event) {
    const mobileMenu = document.getElementById('mobileMegaMenu');
    const menuToggle = document.querySelector('.header__menu-toggle');

    if (
      mobileMenu &&
      mobileMenu.classList.contains('active') &&
      !mobileMenu.contains(event.target) &&
      !menuToggle.contains(event.target)
    ) {
      toggleMobileMenu();
    }
  });

  // Close menu when clicking on menu links
  document.addEventListener('DOMContentLoaded', function () {
    // Wait a bit for the custom elements to be defined
    setTimeout(() => {
      document.querySelectorAll('.mobile-mega-menu__subcategory-link').forEach((link) => {
        link.addEventListener('click', function () {
          toggleMobileMenu();
        });
      });
    }, 100);
  });
</script>

<script>
  function setHeaderHeight() {
    const header = document.querySelector('.header');
    if (header) {
      const headerHeight = header.offsetHeight;
      document.documentElement.style.setProperty('--header-height', `${headerHeight}px`);

      // Also update the mobile menu top position
      const mobileMenu = document.getElementById('mobileMegaMenu');
      if (mobileMenu) {
        mobileMenu.style.top = `${headerHeight}px`;
      }
    }
  }

  document.addEventListener('DOMContentLoaded', setHeaderHeight);
  window.addEventListener('resize', setHeaderHeight);
</script>
<script src="{{ 'predictive-search.js' | asset_url }}" defer="defer"></script>

{% schema %}
{
  "name": "Header",
  "tag": "header",
  "class": "shopify-section-header",
  "settings": [
    {
      "type": "header",
      "content": "Mega Menu Settings"
    },
    {
      "type": "link_list",
      "id": "main_menu",
      "label": "Main Menu",
      "info": "Select the menu to display in the mega menu navigation"
    },
    {
      "type": "image_picker",
      "id": "mega_menu_image",
      "label": "Mega Menu Image",
      "info": "Image displayed in the right column of the mega menu dropdown (shown only when 2+ columns)"
    },
    {
      "type": "text",
      "id": "mega_menu_image_alt",
      "label": "Mega Menu Image Alt Text",
      "default": "Featured products"
    },
    {
      "type": "url",
      "id": "mega_menu_image_link",
      "label": "Mega Menu Image Link",
      "info": "Optional link for the mega menu image"
    },
    {
      "type": "color",
      "id": "undergarments_bg_color",
      "label": "Undergarments background color",
      "default": "#030B1A"
    }
  ]
}
{% endschema %}
