<div class="product-video-carousel product-video-carousel-{{ section.id }} pt-88 pb-88 sm:pt-16 sm:pb-16 relative">
  <div class="page-width flex gap-48 flex-col sm:gap-16">
    {% if section.settings.heading != blank %}
      <h2 class="product-video-carousel__title fw-400 fs-36-lh-40-ls-0 sm:fs-21-lh-24-ls-1_2pct text-center sm:text-left">
        {{ section.settings.heading }}
      </h2>
    {% endif %}

    <slideshow-component
      data-autoplay="{{ section.settings.autoplay }}"
      data-autoplay-delay="{{ section.settings.autoplay_delay | default: 5000 }}"
      data-pause-on-hover="{{ section.settings.pause_on_hover }}"
      data-enable-carousel="true"
      data-show-progress-bar="true"
      data-nav-loop="false"
      class="flex flex-col gap-16"
    >
      <div class="swiper-container overflow-hidden pt-10 pr-4 pb-10 pl-4">
        <div class="swiper-wrapper flex">
          {% for block in section.blocks %}
            {% if block.settings.product != blank %}
              {% assign product = all_products[block.settings.product] %}
              {% assign has_video = false %}
              {% if block.settings.video_type == 'youtube' and block.settings.youtube_url != blank %}
                {% assign has_video = true %}
              {% elsif block.settings.video_type == 'url' and block.settings.video_url != blank %}
                {% assign has_video = true %}
              {% endif %}

              <div class="swiper-slide w-auto" style="box-sizing: border-box;">
                <div
                  class="product-video-item rounded-8 cursor-pointer transition-transform w-268 h-412 overflow-hidden box-shadow{% if has_video %} has-video{% endif %}"
                  data-block-id="{{ block.id }}"
                >
                  <div class="product-video-container relative w-full h-340">
                    {%- assign youtube_id = '' -%}
                    {%- if block.settings.video_type == 'youtube' and block.settings.youtube_url != blank -%}
                      {%- assign temp_id = block.settings.youtube_url | split: 'v=' | last | split: '&' | first -%}
                      {%- if temp_id == blank or temp_id == block.settings.youtube_url -%}
                        {%- assign temp_id = block.settings.youtube_url | split: 'youtu.be/' | last | split: '?' | first -%}
                      {%- endif -%}
                      {%- assign youtube_id = temp_id -%}
                    {%- endif -%}

                    <div class="video-player-container absolute inset-0">
                      {% if has_video %}
                        {%- assign thumbnail_image = block.settings.custom_thumbnail | default: product.featured_image -%}
                        {% if thumbnail_image %}
                          <div class="relative block media h-full w-full">
                            {%- capture sizes %}{% render 'sizes-attribute', grid: true, min: 1, sm: 1, lg: 1, xl: 1 %}{% endcapture -%}

                            {% render 'image',
                              image: thumbnail_image,
                              widths: '268, 268, 268, 268',
                              src_width: 268,
                              sizes: sizes,
                              class: 'img-fit',
                              quality: 1
                            %}
                          </div>
                        {% elsif youtube_id != blank %}
                          <img src="https://img.youtube.com/vi/{{ youtube_id }}/hqdefault.jpg" alt="{{ product.title | escape }}" class="w-full h-full block object-cover" loading="lazy" width="auto" height="auto" />
                        {% else %}
                          <div class="w-full h-full flex items-center justify-center bg-gray-200">
                            {{ 'product-1' | placeholder_svg_tag: 'placeholder-svg' }}
                          </div>
                        {% endif %}
                      {% else %}
                         {% if product.featured_image %}
                          {% render 'image',
                            image: product.featured_image,
                            width: 268,
                            height_attr: 340,
                            alt_text: product.title,
                            css_classes: 'w-full h-full block object-cover',
                            loading: 'lazy',
                            width_attr: 268
                          %}
                        {% endif %}
                      {% endif %}
                    </div>
                    
                    {% if has_video %}
                      <div class="absolute bottom-0 left-0 right-0 flex justify-between items-end z-3 p-16">
                        <div class="flex flex-col gap-9 flex-1">
                          <div class="flex items-center flex-wrap gap-9">
                            <div
                              class="product-video-item-overlay-image border-2 border-solid border-bg media block relative w-40 h-40 rounded-full object-cover "
                              style="padding-left: 40px; padding-bottom: 40px"
                            >
                              {%- capture sizes %}{% render 'sizes-attribute' %}{% endcapture -%}

                              {% render 'image',
                                image: section.settings.image,
                                widths: '40, 40, 40, 40',
                                src_width: 40,
                                sizes: sizes,
                                class: 'img-fit rounded-full',
                                quality: 1
                              %}
                            </div>
                            <p class="fw-500 fs-13-lh-16-ls-0_2 text-bg">
                              {{ block.settings.main_text | default: 'Check out this amazing product!' }}
                            </p>
                          </div>
                          <p class="fw-500 fs-13-lh-16-ls-0_2 m-0 text-bg">
                            {{ block.settings.sub_text | default: 'Skincare routine for glowing skin' }}
                          </p>
                        </div>
                        <button
                          class="product-video-item__small-play w-32 h-32 bg-brand rounded-full flex items-center justify-center shrink-0 cursor-pointer border-none"
                          type="button"
                          aria-label="Play video"
                          data-video-type="{{ block.settings.video_type }}"
                          {% if youtube_id != blank %}data-youtube-id="{{ youtube_id }}"{% endif %}
                          {% if block.settings.video_type == 'url' and block.settings.video_url != blank %}data-video-url="{{ block.settings.video_url }}"{% endif %}
                        >
                          {% render 'icon-play', cls: 'block w-14 h-14 svg-bg' %}
                          {% render 'icon-pause', cls: 'hidden w-14 h-14 svg-bg' %}
                        </button>
                      </div>
                    {% endif %}
                  </div>

                  <div class="flex items-center gap-12 p-8">
                    {% if product.featured_image %}
                      <div class="relative" style="width: 56px; height: 56px;">
                        <div class="media block" style="padding-top: 100%;">
                          {%- capture sizes %}{% render 'sizes-attribute' %}{% endcapture -%}
                          {% render 'image',
                            image: product.featured_image,
                            widths: '56, 56, 56, 56',
                            src_width: 56,
                            sizes: sizes,
                            class: 'img-fit',
                            quality: 1
                          %}
                        </div>
                      </div>
                    {% endif %}
                    <div class="flex flex-col justify-center gap-4">
                      {% if product.price %}
                        <p class="fw-600 fs-16-lh-16-ls-0">
                          {{ product.price | money }}
                        </p>
                      {% endif %}

                      <h3 class="ff-general-sans fw-400 fs-12-lh-16-ls-0_6pct">
                        <a href="{{ product.url }}" aria-label="View {{ product.title }}" class="text-primary">
                          {{ product.title }}
                        </a>
                      </h3>
                    </div>
                  </div>
                </div>
              </div>
            {% else %}
              <div class="swiper-slide w-auto">
                <div class="product-video-item box-shadow" data-block-id="{{ block.id }}">
                  <div class="product-video-container relative w-full h-340">
                    <div>
                      {{ 'product-1' | placeholder_svg_tag: 'placeholder-svg' }}
                    </div>
                  </div>
                  <div class="flex items-center gap-12 p-8">
                    <div class="w-56 h-56 object-cover shrink-0">
                      {{ 'product-1' | placeholder_svg_tag: 'placeholder-svg' }}
                    </div>
                    <div class="flex flex-col gap-4 fw-600 fs-16-lh-16-ls-0 min-h-56 w-full">
                      <p class="m-0 text-brand">
                        {{ 'sections.product_video_carousel.placeholder.price' | t | default: '$0.00' }}
                      </p>
                      <h3 class="ff-general-sans fw-400 fs-12-lh-16-ls-0_6pct m-0">
                        {{ 'sections.product_video_carousel.placeholder.product_title' | t | default: 'Product Title' }}
                      </h3>
                    </div>
                  </div>
                </div>
              </div>
            {% endif %}
          {% endfor %}
        </div>
      </div>

      {% render "slideshow-progress-bar", cls: "hidden sm:block" %}
    </slideshow-component>
  </div>
</div>

<script>
  function loadYouTubeApi() {
    if (window.YT && window.YT.Player) {
      return;
    }
    const tag = document.createElement('script');
    tag.src = "https://www.youtube.com/iframe_api";
    const firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
  }

  document.addEventListener('DOMContentLoaded', function () {
    const videoItems = document.querySelectorAll('.product-video-item.has-video');
    let youtubeApiReady = false;

    const hasYoutubeVideo = Array.from(videoItems).some(item =>
      item.querySelector('.product-video-item__small-play[data-video-type="youtube"]')
    );

    function initializePlayers() {
      videoItems.forEach((item) => {
        const smallPlayButton = item.querySelector('.product-video-item__small-play');
        if (!smallPlayButton) return;

        let isLoaded = false;
        let player;

        const updateIcons = (isPlaying) => {
          const playIcon = item.querySelector('.icon-play');
          const pauseIcon = item.querySelector('.icon-pause');
          if (!playIcon || !pauseIcon) return;
          playIcon.style.display = isPlaying ? 'none' : 'block';
          pauseIcon.style.display = isPlaying ? 'block' : 'none';
        };

        smallPlayButton.addEventListener('click', (e) => {
          e.preventDefault();
          e.stopPropagation();

          const videoType = smallPlayButton.dataset.videoType;

          if (!isLoaded) {
            const playerContainer = item.querySelector('.video-player-container');
            if (!playerContainer) return;

            if (videoType === 'mp4') {
              const videoUrl = smallPlayButton.dataset.videoUrl;
              const video = document.createElement('video');
              video.style.width = '100%';
              video.style.height = '100%';
              video.style.objectFit = 'cover';
              video.muted = true;
              video.loop = true;
              video.playsInline = true;
              video.autoplay = true;
              video.src = videoUrl;

              playerContainer.innerHTML = '';
              playerContainer.appendChild(video);
              video.play().catch(error => console.error("Video play failed:", error));
              player = video;
              isLoaded = true;
              updateIcons(true);
            } else if (videoType === 'youtube') {
              if (!youtubeApiReady) return;
              const youtubeId = smallPlayButton.dataset.youtubeId;
              const playerId = `Youtubeer-${item.dataset.blockId}`;
              
              const playerDiv = document.createElement('div');
              playerDiv.id = playerId;
              playerContainer.innerHTML = '';
              playerContainer.appendChild(playerDiv);

              player = new YT.Player(playerId, {
                height: '100%',
                width: '100%',
                videoId: youtubeId,
                playerVars: { 'autoplay': 1, 'controls': 0, 'mute': 1, 'loop': 1, 'playlist': youtubeId, 'rel': 0, 'showinfo': 0, 'modestbranding': 1 },
                events: {
                  'onReady': (event) => {
                    event.target.playVideo();
                    isLoaded = true;
                  },
                  'onStateChange': (event) => {
                     if (event.data === YT.PlayerState.PLAYING) updateIcons(true);
                     else updateIcons(false);
                  }
                }
              });
            }
          } else {
            if (videoType === 'mp4') {
              if (player.paused) { player.play(); updateIcons(true); } 
              else { player.pause(); updateIcons(false); }
            } else if (videoType === 'youtube' && player) {
              const state = player.getPlayerState();
              if (state === YT.PlayerState.PLAYING) player.pauseVideo();
              else player.playVideo();
            }
          }
        });
      });
    }

    if (hasYoutubeVideo) {
      loadYouTubeApi();
      window.onYouTubeIframeAPIReady = function() {
        youtubeApiReady = true;
        initializePlayers();
      };
    } else {
      initializePlayers();
    }
  });
</script>

{% schema %}
{
  "name": "Product Video Carousel",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "default": "Watch & Shop",
      "label": "Heading"
    },
    {
      "type": "image_picker",
      "id": "image",
      "label": "Card overlay image"
    },
    {
      "type": "checkbox",
      "id": "autoplay",
      "default": false,
      "label": "Auto-rotate slides"
    },
    {
      "type": "range",
      "id": "autoplay_delay",
      "min": 2000,
      "max": 9000,
      "step": 500,
      "default": 5000,
      "label": "Change slides every",
      "unit": "ms"
    },
    {
      "type": "checkbox",
      "id": "pause_on_hover",
      "default": true,
      "label": "Pause on hover"
    }
  ],
  "blocks": [
    {
      "type": "product_video",
      "name": "Product Video",
      "settings": [
        {
          "type": "product",
          "id": "product",
          "label": "Product"
        },
        {
          "type": "image_picker",
          "id": "custom_thumbnail",
          "label": "Custom Video Thumbnail",
          "info": "Optional. If not set, the product's featured image will be used."
        },
        {
          "type": "select",
          "id": "video_type",
          "label": "Video type",
          "options": [
            {
              "value": "youtube",
              "label": "YouTube"
            },
            {
              "value": "url",
              "label": "Video URL"
            }
          ],
          "default": "youtube"
        },
        {
          "type": "url",
          "id": "youtube_url",
          "label": "YouTube video URL",
          "info": "Full YouTube URL (e.g., https://www.youtube.com/watch?v=dQw4w9WgXcQ)"
        },
        {
          "type": "url",
          "id": "video_url",
          "label": "Video URL",
          "info": "Direct link to video file (MP4 recommended)"
        },
        {
          "type": "text",
          "id": "main_text",
          "label": "Main overlay text",
          "default": "Default title"
        },
        {
          "type": "text",
          "id": "sub_text",
          "label": "Sub overlay text",
          "default": "Skincare heroes this summer!"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Product Video Carousel",
      "blocks": [
        {
          "type": "product_video"
        },
        {
          "type": "product_video"
        },
        {
          "type": "product_video"
        },
        {
          "type": "product_video"
        }
      ]
    }
  ]
}
{% endschema %}