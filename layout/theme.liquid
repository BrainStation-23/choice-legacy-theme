<!doctype html>
<html class="no-js" lang="{{ request.locale.iso_code }}">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="preload" href="https://cdnjs.cloudflare.com/ajax/libs/Swiper/8.4.7/swiper-bundle.min.js">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/Swiper/8.4.7/swiper-bundle.min.css">
    <link
      href="https://fonts.googleapis.com/css2?family=Bebas+Neue&family=Inter:wght@500;600;700;800;900&display=swap"
      rel="stylesheet"
    >
    <link href="https://api.fontshare.com/v2/css?f[]=general-sans@500,600,700,800,900&display=swap" rel="stylesheet">

    {%- style %}
      :root {
        --color-background: {{ settings.bg_color.red }}, {{ settings.bg_color.green }}, {{ settings.bg_color.blue }};
        --color-primary-text: {{ settings.primary_text_color.red }}, {{ settings.primary_text_color.green }}, {{ settings.primary_text_color.blue }};
        --color-primary-label: {{ settings.primary_label_color.red }}, {{ settings.primary_label_color.green }}, {{ settings.primary_label_color.blue }};
        --color-secondary-text: {{ settings.secondary_text.red }}, {{ settings.secondary_text.green }}, {{ settings.secondary_text.blue }};
        --color-primary-brand: {{ settings.primary_brand_color.red }}, {{ settings.primary_brand_color.green }}, {{ settings.primary_brand_color.blue }};
        --color-secondary-brand: {{ settings.secondary_brand_color.red }}, {{ settings.secondary_brand_color.green }}, {{ settings.secondary_brand_color.blue }};
        --color-border: {{ settings.border_color.red }}, {{ settings.border_color.green }}, {{ settings.border_color.blue }};

        --page-width: {{ settings.page_width | divided_by: 10.0 }}rem;
      }
    {%- endstyle %}

    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
    <link rel="stylesheet" href="{{ 'main.css' | asset_url }}">

    {%- unless settings.body_font.system? -%}
      <link
        rel="preload"
        href="{{ settings.body_font | font_url }}"
        as="font"
        type="font/woff2"
        crossorigin
        fetchpriority="high"
      >
    {%- endunless -%}

    {%- unless settings.heading_font.system? -%}
      <link
        rel="preload"
        href="{{ settings.heading_font | font_url }}"
        as="font"
        type="font/woff2"
        crossorigin
        fetchpriority="high"
      >
    {%- endunless -%}

    {{ content_for_header }}

    <script src="https://cdnjs.cloudflare.com/ajax/libs/Swiper/8.4.7/swiper-bundle.min.js" defer></script>
    <script src="{{ 'toast.js' | asset_url }}" defer></script>
  </head>

  <body class="color-scheme">
    {%- sections 'header-group' -%}

    <main id="main-content">
      {{ content_for_layout }}

      {% render 'toast' %}
    </main>

    {%- sections 'footer-group' -%}

    <script>
      window.APP_SUB_PATH = "choice_legacy_app";
      window.theme = {
        routes: {
          cart: '{{ routes.cart_url }}',
          cartAdd: '{{ routes.cart_add_url }}',
          cartChange: '{{ routes.cart_change_url }}',
          cartUpdate: '{{ routes.cart_update_url }}',
          predictiveSearch: '{{ routes.predictive_search_url }}'
        },
      };
      {% if customer %}
        window.customerLoggedIn = true;
        window.customerId = {{ customer.id }};
      {% else %}
        window.customerLoggedIn = false;
        window.customerId = null;
      {% endif %}
      window.shopDomain = '{{ shop.domain }}';
    </script>

    <script src="{{ 'slideshow.js' | asset_url }}" defer></script>
    <script src="{{ 'spinner-component.js' | asset_url }}" defer></script>
    <script>
      window.allShopifyProducts = {
        {% for product in collections.all.products %}
          "{{ product.handle }}": {
            "title": "{{ product.title | escape }}",
            "price": "{{ product.price | money }}",
            "imageUrl": "{{ product.featured_image | image_url: width: 200 }}",
            "id": "{{ product.id }}",
            "handle": "{{ product.handle }}",
            "url": "{{ product.url }}",
            "variantId": "{{ product.selected_or_first_available_variant.id }}"
          }{% unless forloop.last %},{% endunless %}
        {% endfor %}
      };
    </script>
    <script src="{{ 'add-to-wishlist.js' | asset_url }}" defer></script>
    <script>
      document.addEventListener('DOMContentLoaded', () => {
        window.theme = window.theme || {};
        {% if customer %}
          window.theme.profilePromise = fetch(`/apps/${APP_SUB_PATH}/customer/account/profile`)
            .then(response => response.json())
            .then(data => {
               window.theme.rewardPointEnabled = data?.rewardPointEnabled ;
               console.log('Reward Point Enabled:', window.theme.rewardPointEnabled);
                     const rewardPointTab = document.querySelector('.customer-account__sidebar-item[data-tab="rewards"]');
                     if (rewardPointTab) {
                       if (window.theme.rewardPointEnabled) {
                         rewardPointTab.style.display = 'flex';
                       } else {
                         rewardPointTab.style.display = 'none';
                       }
                     }

              if (data.success && data.wishlist && data.wishlist.products) {
                const wishlistHandles = data.wishlist.products.map(product => product.productHandle);
                window.theme.wishlistHandles = new Set(wishlistHandles);

              } else {
                window.theme.wishlistHandles = new Set();
              }
              if (typeof updateAllWishlistButtons === 'function') {
                updateAllWishlistButtons();
              }
              return data;
            })
            .catch(error => {
              console.error('Failed to fetch profile/wishlist:', error);
              window.theme.wishlistHandles = new Set();
              if (typeof updateAllWishlistButtons === 'function') {
                updateAllWishlistButtons();
              }
              return Promise.reject(error);
            });
        {% else %}
            window.theme.wishlistHandles = new Set();
            if (typeof updateAllWishlistButtons === 'function') {
                updateAllWishlistButtons();
            }
            window.theme.profilePromise = Promise.resolve({ success: true, wishlist: { products: [] } });
        {% endif %}
      });
    </script>
    {% render 'cart-drawer' %}
    <script src="{{ 'cart.js' | asset_url }}" defer></script>
  </body>
</html>
